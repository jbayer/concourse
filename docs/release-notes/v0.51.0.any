#language anatomy

\title{v0.51.0}

This release contains \italic{backwards-incompatible} changes that clean up the
semantics of \reference{put-step} and \reference{get-step} within build plans.

\list{
  In a given build plan, \italic{all} \reference{get-step} steps are considered
  inputs to the plan's outer job, and have their version determined before
  the build starts running. Previously only the "firstmost" \code{get}s (or
  ones with \code{passed} constraints) were considered inputs, which was
  pretty confusing.

  As part of this, \code{trigger} now defaults to \code{false}, rather than
  \code{true}.

  To auto-trigger based on a \reference{get-step} step in your plan, you must
  now explicitly say \code{trigger: true}.

  So, a build plan that looks like...:

  \codeblock{yaml}{
  - aggregate:
    - get: a
    - get: b
      trigger: false
  - get: c
  }

  ...would be changed to...:

  \codeblock{yaml}{
  - aggregate:
    - get: a
      trigger: true
    - get: b
  - get: c
  }

  ...with one subtle change: the version of \code{c} is determined before
  the build starts, rather than fetched arbitrarily in the middle.
}{
  All \reference{put-step} steps now imply a \reference{get-step} of the created
  resource version. This allows build plans to produce an artifact and use
  the artifact in later steps.

  These implicit \reference{get-step} steps are displayed differently in the UI
  so as to not be confused with explicit \reference{get-step} steps.

  So, a build plan that looks like...:

  \codeblock{yaml}{
  - get: a
  - put: b
  - get: b
  - put: c
    params: {b/something}
  }

  ...would be changed to...:

  \codeblock{yaml}{
  - get: a
  - put: b
  - put: c
    params: {b/something}
  }

  The main difference being that this now \italic{guarantees} that the version
  of \code{b} that \code{c} uses is the same version that was created.

  Note that, given the first change, this is the only way for new versions
  to appear in the middle of a build plan.
}{
  The rendering of the pipeline graph has been improved; the algorithm now
  closes gaps between jobs by shifting them as far to the right as possible.
  This prevents input lines from meandering across the UI.
}{
  The
  \hyperlink{https://github.com/concourse/docker-image-resource}{Docker
  Image resource} now supports tagging images from a file, rather than
  a fixed tag. This is useful for creating images based on upstream
  versioned artifacts.
}{
  The
  \hyperlink{https://github.com/concourse/docker-image-resource}{Docker
  Image resource} can now be used to push to a private registry with no
  auth.
}{
  The
  \hyperlink{https://github.com/concourse/docker-image-resource}{Docker
  Image resource} can now be configured with \code{server_args}, to inject
  arguments to the daemon, e.g. \code{--insecure-registry}.
}
