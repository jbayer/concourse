#!/bin/bash

set -e

<%
  require "cgi"
  require "shellwords"
%>

RUN_DIR=/var/vcap/sys/run/tsa
LOG_DIR=/var/vcap/sys/log/tsa
PIDFILE=$RUN_DIR/tsa.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

<%
  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  my_ip = p("tsa.forward_host", nil)
  my_ip ||= discover_external_ip
%>

case $1 in

  start)
    pid_guard $PIDFILE "tsa"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    echo $$ > /var/vcap/sys/run/tsa/tsa.pid

    for key in /var/vcap/packages/generated_tsa_host_key/id_rsa \
               /var/vcap/jobs/tsa/config/host_key; do
      chown vcap:vcap $key
      chmod 0400 $key
    done

    {
<% if p("tsa.authorize_generated_worker_key") %>
      cat /var/vcap/packages/generated_worker_key/id_rsa.pub
<% end %>
      cat <<EOF
<%= p("tsa.authorized_keys").join("\n") %>
EOF
    } > /var/vcap/jobs/tsa/config/authorized_keys

    exec chpst -u vcap:vcap /var/vcap/packages/tsa/bin/tsa \
      -forwardHost=<%= my_ip %> \
      <% if p("tsa.host_key") != "" %> \
      -hostKey=/var/vcap/jobs/tsa/config/host_key \
      <% else %> \
      -hostKey=/var/vcap/packages/generated_tsa_host_key/id_rsa \
      <% end %> \
      -authorizedKeys=/var/vcap/jobs/tsa/config/authorized_keys \
      -heartbeatInterval=<%= p("tsa.heartbeat_interval") %> \
      -atcAPIURL=<%= "http://#{CGI.escape(p("tsa.atc.username"))}:#{CGI.escape(p("tsa.atc.password"))}@#{p("tsa.atc.address")}" %> \
      1>>$LOG_DIR/tsa.stdout.log \
      2>>$LOG_DIR/tsa.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
